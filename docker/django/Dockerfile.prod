# Base image
FROM python:3.10-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV POETRY_VIRTUALENVS_CREATE=false
ENV PYTHONPATH=/usr/src/rh/src

# Install dependencies
RUN apt-get update && apt-get install -y \
    curl cron \
    # TODO: This adds 1.3GB to layers
    npm nodejs && \
    apt-get clean && \
    npm cache clean -f && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/*

# Install Python dependencies
RUN pip install poetry

COPY docker/django/django-entrypoint.sh /usr/src/rh/django-entrypoint.sh
RUN chmod a+x /usr/src/rh/django-entrypoint.sh

COPY docker/django/rh-tasks-cron /etc/cron.d/rh-tasks-cron
RUN chmod 0644 /etc/cron.d/rh-tasks-cron
RUN crontab /etc/cron.d/rh-tasks-cron
RUN touch /var/log/cron.log

# to preserve the docker cache
COPY ["README.md", "Makefile", "poetry.lock","pyproject.toml","/usr/src/rh/"]
# COPY ["src/static/package.json","src/static/vite.config.js","src/static/package-lock.json","/usr/src/rh/src/static/"]

# Set the working directory
WORKDIR /usr/src/rh
RUN poetry install --without dev --no-root --no-interaction --no-directory --no-ansi
# copy project code -> src to /usr/src/rh/src
COPY src /usr/src/rh/src

# DEBUG should be False by default in production.py file, vite.config.js file should have production settings
RUN poetry run make npm-install && \
    poetry run make npm-build && \
    npm cache clean --force && \
    rm -rf /root/.npm && \
    rm -rf src/static/node_modules

ENTRYPOINT ["/usr/src/rh/django-entrypoint.sh"]

# Gunicorn will be used to run the server
CMD ["gunicorn", "--bind", "0.0.0.0:8000","--error-logfile","-","--workers=4","src.core.wsgi:application"]
