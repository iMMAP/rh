version: '3.8'

networks:
  monitoring:
    driver: bridge

services:
  rh_django:
    container_name: rh_django
    build:
      context: .
      dockerfile: ./docker/Dockerfile.python
    command: poetry run python src/manage.py runserver 0.0.0.0:8000
    volumes:
      - ./src:/usr/src/rh/src
    ports:
      - 8000:8000
    depends_on:
      - rh_db
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=core.settings.local

  rh_npm:
    container_name: rh_npm
    build: 
      context: .
      dockerfile: ./docker/Dockerfile.npm
    volumes:
      - ./src:/usr/src/rh/src
    ports:
      - 5173:5173
    entrypoint: ["make","vite"]

  rh_db:
    container_name: rh_postgres_db
    image: postgres:14.2-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file: .env
    environment:
      POSTGRES_DB: rh
      POSTGRES_USER: rh_user
      POSTGRES_PASSWORD: rh_1234
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      - dbbackups:/pg_backups
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - TERM=linux
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring
    


volumes:
  postgresql-data:
    driver: local
  dbbackups:
    name: dbbackups
  grafana_storage: {}
  prometheus_data: {}
