services:
  django:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.prod
    container_name: django
    restart: unless-stopped 
    depends_on:
      - db
    environment:
      DJANGO_SETTINGS_MODULE: core.settings.production
      DB: postgresql
      DB_HOST: db
      DB_NAME: rh
      DB_USER: rh_user
      DB_PASSWORD: rh_1234
      DB_PORT: 5432
    env_file: .env
    volumes:
      # - './src:/usr/src/rh'
      - static_volume:/usr/src/rh/src/static-cdn
      - media_volume:/usr/src/rh/src/media

  db:
    image: postgres:14
    container_name: postgres_db
    restart: unless-stopped 
    environment:
      POSTGRES_DB: rh
      POSTGRES_USER: rh_user
      POSTGRES_PASSWORD: rh_1234
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5434:5432

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    environment:
      - HTTP_HOST=localhost
    volumes:
      - ./docker/nginx-default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/usr/src/rh/src/static-cdn
      - media_volume:/usr/src/rh/src/media
      - letsencrypt:/etc/letsencrypt 
      - ./docker/nginx-entrypoint.sh:/nginx-entrypoint.sh
    entrypoint: ["/bin/sh", "/nginx-entrypoint.sh"]
    depends_on:
      - django
      - certbot
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes:
      - letsencrypt:/etc/letsencrypt
      - ./docker/certbot-entrypoint.sh:/entrypoint.sh
    env_file:
      - .env
    environment:
      - HTTPS_HOST=${HTTPS_HOST}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    restart: no 

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
    - 9090:9090
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - node_exporter
  
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    restart: unless-stopped
    ports:
      - 9100:9100 
    volumes:
      - '/:/host:ro'

  grafana:
    image: grafana/grafana
    # environment: 
      # GF_SECURITY_DISABLE_INITIAL_ADMIN_CREATION: "true"
      # GF_AUTH_ANONYMOUS_ENABLED: "true"
      # GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
      # GF_AUTH_DISABLE_SIGNOUT_MENU: "true"
      # GF_AUTH_DISABLE_LOGIN_FORM: "true"
      # GF_SECURITY_ADMIN_USER: "demo"
      # GF_SECURITY_ADMIN_PASSWORD: "grafana"
    volumes:
      - ./docker/grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yaml
      - 'grafana_storage:/var/lib/grafana'
    ports:
      - "3000:3000"

volumes:
  db_data:
    name: db_data
  static_volume:
    name: static_volume
  media_volume:
    name: media_volume
  letsencrypt:
  grafana_storage: {}